) +
layer(
data = diamonds, mapping = aes(x = carat, y = price),
geom = "smooth", position = "identity",
stat = "smooth", method= lm
) +
scale_y_log10() +
scale_x_log10() +
coord_cartesian()
ggplot() +
layer(
data = diamonds, mapping = aes(x = carat, y = price),
geom = "point", stat = "identity", position = "identity"
) +
scale_y_continuous() +
scale_x_continuous() +
coord_cartesian()
ggplot() +
layer(
data = diamonds, mapping = aes(x = carat, y = price),
geom = "point", stat = "identity", position = "identity"
) +
layer(
data = diamonds, mapping = aes(x = carat, y = price),
geom = "smooth", position = "identity",
stat = "smooth", method= lm
) +
scale_y_log10() +
scale_x_log10() +
coord_cartesian()
ggplot(diamonds, aes(carat, price)) +
geom_point() +
stat_smooth(method = lm) +
scale_x_log10() +
scale_y_log10()
qplot(carat, price, data = diamonds)
require(tidyverse)
knitr::opts_chunk$set(echo = TRUE)
ggplot2::mpg
?mpg
require(ggplot2)
ggplot(data=mpg) +
geom_point(mapping = aes(x=displ, y=hwy))
ggplot(data=mpg) +
geom_point(mapping = aes(x=displ, y=hwy))
ggplot(data = mpg)
dim(mpg)
colnum(mpg)
dim.data.frame(mpg)
str(mpg)
?mpg
mpg$drv
head(mpg$drv)
str (mpg) # rows # columns
ggplot(data = mpg)+
geom_point(mapping = aes(hwy, cyl))
ggplot(data = mpg)+
geom_point(mapping = aes(hwy, cyl))
ggplot(data = mpg)+
geom_point(mapping = aes(class, drv))
glimpse(mpg)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, color = class))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, size = class))
knit_with_parameters('H:/Training/STAT545-participation/Weeks_3,4/02102019-Data visualization(ggplot2)_R 4 data science (book).Rmd')
unlink('Weeks_3,4/02102019-Data visualization(ggplot2)_R 4 data science (book)_cache', recursive = TRUE)
# Left
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, alpha = class))
# Right
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, shape = class))
# Left
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, alpha = class))
# Right
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, shape = class))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy), colors= red))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy), colors= red)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy), color= red)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy), color= "red")
str(mpg)
mpg
datatable(mpg)
data.table::as.data.table(mpg)
unlink('Weeks_3,4/02102019-Data visualization(ggplot2)_R 4 data science (book)_cache', recursive = TRUE)
unlink('Weeks_3,4/02102019-Data visualization(ggplot2)_R 4 data science (book)_cache', recursive = TRUE)
update.packages(tidyverse)
update.packages([tidyverse])
update.packages("tidyverse")
update.packages("tidyverse", dependencies=T)
update.packages()
# types of variables inside mpg
str(mpg)
unlink('Weeks_3,4/02102019-Data visualization(ggplot2)_R 4 data science (book)_cache', recursive = TRUE)
require(tidyverse)
# types of variables inside mpg
str(mpg)
# lists type of variables too
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, color=cty))
# Continuous variable to color produces an intensity color associated to each value
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, size=cty))
vignette("ggplot2-specs").
vignette("ggplot2-specs")
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, size=displ))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, stroke=cty))
?geom_point
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, stroke=1))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, stroke=3))
for i in 1:3 {
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, stroke=1))
}
for i in 1:3 {
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, stroke=1))
}
for (i in 1:3) {
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, stroke=i))
}
for (i in 1:3) {
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, stroke=i))
}
#
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, color=displ<5))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_wrap(~ class, nrow = 2)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_wrap(~ drv, nrow = 2)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_grid(drv~ class, nrow = 2)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_grid(drv~ class)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_wrap(~ class)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_wrap(~ cty)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_wrap(.~ cty)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_wrap(.~ cty)
mpg$cty
str(cty)
str(mpg)
tab(mpg$cty)
table(mpg$cty)
ggplot(data = mpg) +
geom_point(mapping = aes(x = drv, y = cyl))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_wrap(~ cty)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_grid(drv ~ .)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_grid(. ~ cyl)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_wrap(~ cty)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_wrap(cty~.)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_grid(drv ~ .)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_grid(. ~ drv)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_wrap(~ class, nrow = 2)
ggplot(data = mpg) +
mapping = aes(x = displ, y = hwy) +
geom_point()
ggplot(data = mpg) +
mapping = aes(x = displ, y = hwy) +
geom_point()
ggplot(data = mpg) +
geom_point() +
mapping = aes(x = displ, y = hwy)
ggplot(data = mpg) +
geom_point(  mapping = aes(x = displ, y = hwy))
ggplot(data = mpg) +
geom_smooth(  mapping = aes(x = displ, y = hwy))
ggplot(data = mpg) +
geom_smooth(  mapping = aes(x = displ, y = hwy, linetype= drv))
ggplot(data = mpg) +
geom_smooth(mapping = aes(x = displ, y = hwy))
ggplot(data = mpg) +
geom_smooth(mapping = aes(x = displ, y = hwy, group = drv))
# group does not add a legend
ggplot(data = mpg) +
geom_smooth(
mapping = aes(x = displ, y = hwy, color = drv),
show.legend = FALSE
)
ggplot(data = mpg) +
geom_smooth(
mapping = aes(x = displ, y = hwy, color = drv))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
geom_smooth(mapping = aes(x = displ, y = hwy))
ggplot(mpg, mapping = aes(displ, hwy)) +
geom_point() +
geom_smooth()
ggplot(data=mpg, mapping = aes(x=displ, y=hwy)) +
geom_point() +
geom_smooth()
ggplot(data=mpg, mapping = aes(x=displ, y=hwy)) +
geom_point(mapping = aes(color=class)) +
geom_smooth()
ggplot(data=mpg, mapping = aes(x=displ, y=hwy)) +
geom_point(mapping = aes(color=class)) +
geom_smooth( data = filter(mpg, class=="subcompact"))
ggplot(data=mpg, mapping = aes(x=displ, y=hwy)) +
geom_point(mapping = aes(color=class)) +
geom_smooth( data = filter(mpg, class=="subcompact"), se=FALSE)
?geom_smooth()
ggplot(data=mpg, mapping = aes(x=displ, y=hwy)) +
geom_point() +
geom_smooth()
require(tidyverse)
ggplot(data=mpg, mapping = aes(x=displ, y=hwy)) +
geom_point() +
geom_smooth()
ggplot(data=mpg, mapping = aes(x=displ, y=hwy)) +
geom_line()
ggplot(data=mpg, mapping = aes(x=displ, y=hwy)) +
geom_line() +
geom_histogram()
ggplot(data=mpg, mapping = aes(x=displ)) +
geom_histogram()
ggplot(data=mpg, mapping = aes(x=displ)) +
geom_boxplot()
ggplot(data=mpg, mapping = aes(x=displ, y=hwy)) +
geom_boxplot()
?geom_boxplot
ggplot(data=mpg, mapping = aes(x=displ, y=hwy)) +
geom_boxplot()
ggplot(data = mpg, mapping = aes(x = displ, y = hwy, color = drv)) +
geom_point() +
geom_smooth(se = FALSE)
ggplot(data = mpg, mapping = aes(x = displ, y = hwy, color = drv)) +
geom_point() +
geom_smooth(se = FALSE, show.legend = F)
ggplot(data = mpg, mapping = aes(x = displ, y = hwy, color = drv)) +
geom_point(show.legend = F) +
geom_smooth(se = FALSE, show.legend = F)
ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) +
geom_point() +
geom_smooth(se=FALSE, color="blue")
#2
ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) +
geom_point() +
geom_smooth(z=drv, se=FALSE, color="blue")
#2
ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) +
geom_point() +
geom_smooth(mapping = aes(line=drv), se=FALSE, color="blue")
#3
ggplot(data = mpg, mapping = aes(x = displ, y = hwy, color=drv)) +
geom_point() +
geom_smooth(se=FALSE)
#3
ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) +
geom_point(mapping = aes(color=drv)) +
geom_smooth(se=FALSE)
#5
ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) +
geom_point(mapping = aes(color=drv)) +
geom_smooth(mapping = aes(linetype=drv), se=FALSE)
#6
ggplot(mpg, mapping = aes(displ, hwy)) +
geom_point(size=5, color="white")) +
geom_smooth(se=FALSE)
#6
ggplot(mpg, mapping = aes(displ, hwy)) +
geom_point(size=5, color="white") +
geom_smooth(se=FALSE)
#6
ggplot(mpg, mapping = aes(displ, hwy)) +
geom_point(size=5, color="white") +
geom_point(mapping = aes(color=drv))
#6
ggplot(mpg, mapping = aes(displ, hwy)) +
geom_point(size=4, color="white") +
geom_point(mapping = aes(color=drv))
#6
ggplot(mpg, mapping = aes(displ, hwy)) +
geom_point(size=3, color="white") +
geom_point(mapping = aes(color=drv))
(diamonds)
str(diamonds)
ggplot(data=diamonds)+
geom_bar(mapping = aes(x=cut))
table(diamonds$cut)
?geom_bar
ggplot(data = diamonds) +
stat_count(mapping = aes(x = cut))
ggplot(data = diamonds) +
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, stat="prop"))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, y=..prop.., group=2))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, y=..prop.., group=1))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, y=..prop..))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, y=..prop.., , group=1))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, y=..prop.., , group=2))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, y=..prop.., , group=2))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, y=..prop.., , group=1))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, y=..prop.., , group=11))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, y=..prop.., group=1))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, y=..prop.., group=12))
ggplot(data = diamonds) +
stat_summary(
mapping = aes(x = cut, y = depth),
fun.ymin = min,
fun.ymax = max,
fun.y = median
)
?stat_summary
ggplot(data = diamonds) +
geom_pointrange(mapping = aes(x = cut, y = depth) )
geom_pointrange()
?geom_pointrange()
ggplot(data = diamonds) +
ggplot(data = diamonds) +
geom_pointrange(mapping = aes(x = cut, y = depth) , stat = summary)
ggplot(data = diamonds) +
geom_pointrange(mapping = aes(x = cut, y = depth) , stat = summary)
ggplot(data = diamonds) +
geom_pointrange(mapping = aes(x = cut, y = depth) , stat = "summary")
ggplot(data = diamonds) +
geom_pointrange(mapping = aes(x = cut, y = depth) , stat = "summary",
fun.ymin = min,
fun.ymax = max,
fun.y = median)
ggplot(data = diamonds) +
ggplot(data = diamonds) +
geom_col(mapping = aes(x = cut, y = depth))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, y=..prop.., group=1))
ggplot(data = diamonds) +
geom_col(mapping = aes(x = cut))
?geom_col
ggplot(data = diamonds) +
geom_col(mapping = aes(x = cut, y = depth))
?stat_smooth
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, y = ..prop..))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, fill = color, y = ..prop..))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, fill = color, y = ..prop.., group=1))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, y= ..count../sum(..count..), fill = color))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, fill = clarity))
ggplot(data = diamonds, mapping = aes(x = cut, fill = clarity)) +
geom_bar(alpha = 1/5, position = "identity")
ggplot(data = diamonds, mapping = aes(x = cut, fill = clarity)) +
geom_bar(alpha = 1/5)
, position = "identity"
ggplot(data = diamonds, mapping = aes(x = cut, fill = clarity)) +
geom_bar(alpha = 1/5, position = "identity")
ggplot(data = diamonds, mapping = aes(x = cut, fill = clarity)) +
geom_bar(alpha = 1/5, position = "identity")
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, fill = clarity), position = "fill")
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, fill = clarity), position = "dodge")
ggplot(data = mpg) +
geom_point(mapping = aes(displ, hwy), position = "jitter")
ggplot(data = mpg, mapping = aes(x = cty, y = hwy)) +   geom_point()
ggplot(data = mpg) +
geom_point(mapping = aes(displ, hwy))
ggplot(data = mpg) +
geom_point(mapping = aes(displ, hwy), position = "jitter")
?geom_jitter
ggplot(data = mpg, mapping = aes(x = cty, y = hwy)) +   geom_point()
ggplot(data = mpg, mapping = aes(x = cty, y = hwy)) +   geom_point() +
geom_jitter(width = 0.3)
ggplot(data = mpg, mapping = aes(x = cty, y = hwy)) +   geom_point() +
geom_jitter()
ggplot(data = mpg, mapping = aes(x = cty, y = hwy)) +   geom_point() +
geom_jitter(width = 1)
ggplot(data = mpg, mapping = aes(x = cty, y = hwy)) +   geom_point() +
geom_jitter(width = 0.15)
ggplot(data = mpg, mapping = aes(x = cty, y = hwy)) +   geom_point() +
geom_jitter(width = 0.25)
ggplot(data = mpg, mapping = aes(x = cty, y = hwy)) +   geom_point() +
geom_jitter(height = 4)
ggplot(data = mpg, mapping = aes(x = cty, y = hwy)) +   geom_point() +
geom_jitter(height = 14)
ggplot(data = mpg, mapping = aes(x = cty, y = hwy)) +   geom_point() +
geom_jitter(width = 2, height = 0)
ggplot(data = mpg, mapping = aes(x = cty, y = hwy)) +
geom_count()
?geom_boxplot()
ggplot(mpg, cty)+
geom_boxplot()
ggplot(mpg, cty)+
geom_boxplot()
ggplot(mpg, mapping = aes(cty, hwy))+
geom_boxplot()
ggplot(mpg, mapping = aes(cty, hwy))+
geom_boxplot(position = "dodge")
ggplot(mpg, mapping = aes(cty, hwy))+
geom_boxplot(position = "identity")
ggplot(mpg, mapping = aes(cty, hwy))+
geom_boxplot(position = "identity", group=1)
ggplot(mpg, mapping = aes(cty, hwy))+
geom_boxplot(alpha=0.1)
ggplot(mpg, mapping = aes(hwy, cty))+
geom_boxplot(alpha=0.1)
ggplot(mpg, mapping = aes(hwy, cty))+
geom_boxplot(group=1, alpha=0.1)
ggplot(mpg, mapping = aes(drv, hwy))+
geom_boxplot(group=1, alpha=0.1)
ggplot(mpg, mapping = aes(drv, hwy))+
geom_boxplot()
table(mpg$cty)
ggplot(mpg, mapping = aes(cty, hwy))+
geom_boxplot()
ggplot(mpg, mapping = aes(hwy, drv))+
geom_boxplot()
ggplot(mpg, mapping = aes(hwy, cty))+
geom_boxplot()
ggplot(mpg, mapping = aes(hwy, cty))+
geom_boxplot() +
stat_count()
?geom_boxplot()
ggplot(mpg, mapping = aes(hwy, cty))+
geom_boxplot(varwidth = T) +
stat_count()
ggplot(mpg, mapping = aes(hwy, cty))+
geom_boxplot(varwidth = T)
ggplot(mpg, mapping = aes(hwy, cty))+
geom_boxplot(width+0.2)
ggplot(mpg, mapping = aes(hwy, cty))+
geom_boxplot(width=0.2)
p <- ggplot(mpg, aes(class, hwy))
p + geom_boxplot()
p + geom_boxplot() + coord_flip()
p + geom_boxplot(notch = TRUE)
p + geom_boxplot(varwidth = TRUE)
p + geom_boxplot()
p + geom_boxplot(varwidth = TRUE)
p + geom_boxplot(fill = "white", colour = "#3366FF")
# By default, outlier points match the colour of the box. Use
# outlier.colour to override
p + geom_boxplot(outlier.colour = "red", outlier.shape = 1)
# Remove outliers when overlaying boxplot with original data points
p + geom_boxplot(outlier.shape = NA) + geom_jitter(width = 0.2)
# Boxplots are automatically dodged when any aesthetic is a factor
p + geom_boxplot(aes(colour = drv))
# You can also use boxplots with continuous x, as long as you supply
# a grouping variable. cut_width is particularly useful
ggplot(diamonds, aes(carat, price)) +
geom_boxplot()
ggplot(diamonds, aes(carat, price)) +
geom_boxplot(aes(group = cut_width(carat, 0.25)))
ggplot(mpg, mapping = aes(hwy, cty))+
geom_boxplot(aes(group=cut_width(hwy, 2)))
ggplot(mpg, mapping = aes(hwy, cty))+
geom_boxplot(aes(group=cut_width(hwy, 10)))
ggplot(mpg, mapping = aes(hwy, cty))+
geom_boxplot(aes(group=cut_width(hwy, 5)))
ggplot(mpg, mapping = aes(class, cty))+
geom_boxplot()
ggplot(mpg, mapping = aes(class, hwy))+
geom_boxplot()
ggplot(mpg, mapping = aes(class, hwy))+
geom_boxplot()
p <- ggplot(mpg, mapping = aes(class, hwy))
ggplot(mpg, mapping = aes(class, hwy, drv))+
geom_boxplot()
ggplot(mpg, mapping = aes(class, hwy, color=drv))+
geom_boxplot()
