install.packages("devtools")
devtools::install_github("JoeyBernhardt/singer")
devtools::install_github("JoeyBernhardt/singer")
library(tidyverse)
library(tidyverse)
library(singer)
(time <- as_tibble(songs) %>%
rename(song = title))
time
(time <- as_tibble(songs) %>%
rename(song = title))
songs
time
songs
time
songs
locations
locations
(album <- as_tibble(locations) %>%
select(title, everything()) %>%
rename(album = release,
song  = title))
(time <- as_tibble(songs) %>%
rename(song = title))
vignette("tibble")
time %>%
semi_join(album,
by = c("song", "artist_name"))
time %>%
semi_join(album, by = c("song","artist_name"))
time %>%
left_join(album)
time %>%
anti_join (album, by = "song")
time %>%
semi_join(album, by = c("song","artist_name"))
album
time %>%
anti_join(album, by = "artist")
time %>%
anti_join(album, by = "artist_name")
time %>%
full_join (album, by = "song")
time %>%
full_join (album, by = c("song","artist_name"))
fell <- read_csv("https://raw.githubusercontent.com/jennybc/lotr-tidy/master/data/The_Fellowship_Of_The_Ring.csv")
ttow <- read_csv("https://raw.githubusercontent.com/jennybc/lotr-tidy/master/data/The_Two_Towers.csv")
retk <- read_csv("https://raw.githubusercontent.com/jennybc/lotr-tidy/master/data/The_Return_Of_The_King.csv")
bind_cols(fell, ttow, retk)
bind_rows(fell, ttow, retk)
fell %>%
anti_join (ttow, by = "Race") %>%
anti_join (retk, by = "Race")
(y <-  tibble(x1 = LETTERS[1:3], x2 = 1:3))
(z <- tibble(x1 = c("B", "C", "D"), x2 = 2:4))
intersect(y, z)
?intersect
union(
mutate(y, day = "Day 1"),
mutate(z, day = "Day 2")
)
inner_join(y,z)
intersect(y, z)
inner_join(y,z)
setdiff(y,z)
anti_join(y,z)
browseVignettes("readr")
gap_asia_2007 <- gapminder %>%
filter(year == 2007, continent == "Asia")
require(tidyverse)
gap_asia_2007 <- gapminder %>%
filter(year == 2007, continent == "Asia")
require(gapminder)
gap_asia_2007 <- gapminder %>%
filter(year == 2007, continent == "Asia")
write_csv(gap_asia_2007,"exported_file.csv")
getwd()
here::here()
install.packages("here")
here::here()
# directory with my R.proj file
```
here::here()
# directory with my R.proj file
here::here("data")
# directory with my R.proj file
here::here("data", "cm011_data")
# directory with my R.proj file
here::here("data")
here::here("data", "cm011_data")
# directory with my R.proj file
here::here("data")
here::here("data", "cm011_data")
here::here("data", "cm011_data", "05Nov2019")
?write.csv()
gap_asia_2007 <- gapminder %>%
filter(year == 2007, continent == "Asia")
require(tidyverse)
require(gapminder)
gap_asia_2007 <- gapminder %>%
filter(year == 2007, continent == "Asia")
gap_asia_2007
write_csv(gap_asia_2007,"./data/cm011_data/exported_file.csv")
write_csv(gap_asia_2007,".\data\cm011_data\exported_file.csv")
write_csv(gap_asia_2007,"./data/cm011_data/exported_file.csv")
require(here)
# not actually created unless you put some data in
write_csv(gap_asia_2007,"exported_file.csv", here::here("Weeks_5-6", "Data", "cm011_data"))
here()
# not actually created unless you put some data in
write_csv(gap_asia_2007,"exported_file.csv", here::here("Weeks_5-6", "Data", "cm011_data"))
# not actually created unless you put some data in
write_csv(gap_asia_2007,"exported_file.csv", here::here("Weeks_5-6", "data.cm011"))
here::here("Weeks_5-6", "data.cm011")
# not actually created unless you put some data in
write_csv(gap_asia_2007,here::here("Weeks_5-6", "data", "exported_file.csv"))
# not actually created unless you put some data in
write_csv(gap_asia_2007,here::here("Weeks_5-6", "data.cm011", "exported_file.csv"))
read_csv(here::here("data","cm011_data","exported_file.csv"))
read_csv(here::here("data","data.cm011","exported_file.csv"))
read_csv(here::here("Weeks_5-6","data.cm011","exported_file.csv"))
url <- "http://gattonweb.uky.edu/sheather/book/docs/datasets/magazines.csv"
read_csv(url)
packages <- c("gapminder", "tidyverse", "forcats","ggplot2")
lapply(packages, require)
lapply(require, packages)
?lapply
lapply(packages, require())
lapply(packages, require)
lapply(packages, library)
packages <- c("gapminder", "tidyverse", "forcats","ggplot2")
lapply(packages, require, character.only = TRUE)
packages <- c(
"gapminder",
"tidyverse",
"forcats",
"ggplot2")
lapply(packages, require, character.only = TRUE)
str(gapminder$continent)
levels(gapminder$continent)
nlevels(gapminder$continent)
class(gapminder$continent)
fct_count(gapminder$continent)
nlevels(gapminder$country)
h_countries <- c("Egypt", "Haiti", "Romania", "Thailand", "Venezuela")
h_gap <- gapminder %>%
filter(country %in% h_countries)
nlevels(h_gap)
nlevels(h_gap$country)
# use of fct_drop () removes unused levels
h_gap$country %>%
fct_drop() %>%
levels()
gapminder$continent %>%
fct_infreq() %>%
levels()
# alphabetically but backwards
gapminder$continent %>%
fct_rev() %>%
levels()
# increasing frequency
gapminder$continent %>%
fct_infreq() %>%
fct_rev() %>%
levels()
fct_reorder(gapminder$country, gapminder$lifeExp)  %>%
levels() %>%
head()
## order accoring to minimum life exp instead of median
fct_reorder(gapminder$country, gapminder$lifeExp, min) %>%
levels() %>%
head()
## backwards median
fct_reorder(gapminder$country, gapminder$lifeExp, .desc = TRUE) %>%
levels() %>%
head()
fct_reorder(gapminder$country, gapminder$lifeExp)  %>%
levels() %>%
head()
i_gap <- gapminder %>%
filter(country %in% c("United States", "Sweden", "Australia")) %>%
droplevels()
i_gap$country %>%
fct_recode("USA" = "United States", "Oz" = "Australia") %>% levels()
i_gap <- gapminder %>%
filter (country %in% c("Australia", "Korea, Dem. Rep.", "South Korea"))
i_gap <- gapminder %>%
filter (country %in% c("Australia", "Korea, Dem. Rep.", "South Korea")) %>%
fct_recode("Oz" = "Australia")
i_gap$country %>%
fct_recode("Oz" = "Australia", "North Korea" ="Korea, Dem. Rep.", "South Korea"= "Korea, Rep.")
i_gap$country %>%
fct_recode("Oz" = "Australia", "North Korea" ="Korea, Dem. Rep.", "South Korea"= "Korea, Rep.") %>%
levels()
i_gap <- gapminder %>%
filter (country %in% c("Australia", "Korea, Dem. Rep.", "South Korea"))
i_gap$country
i_gap <- gapminder %>%
filter (country %in% c("Australia", "Korea, Dem. Rep.", "South Korea")) %>%
fct_drop()
i_gap <- gapminder %>%
filter (country %in% c("Australia", "Korea, Dem. Rep.", "South Korea")) %>%
droplevels()
i_gap$country %>%
fct_recode("Oz" = "Australia", "North Korea" ="Korea, Dem. Rep.", "South Korea"= "Korea, Rep.") %>%
levels()
i_gap <- gapminder %>%
filter (country %in% c("Australia", "Korea, Dem. Rep.", "South Korea")) %>%
droplevels()
i_gap$country %>%
fct_recode("Oz" = "Australia", "North Korea" ="Korea, Dem. Rep.", "South Korea"= "Korea, Rep.") %>%
levels()
i_gap <- gapminder %>%
filter (country %in% c("Australia", "Korea, Dem. Rep.", "Korea, Rep.")) %>%
droplevels()
i_gap$country %>%
fct_recode("Oz" = "Australia", "North Korea" ="Korea, Dem. Rep.", "South Korea"= "Korea, Rep.") %>%
levels()
gapminder %>%
filter(year==1997)
gapminder %>%
filter(year==1997) %>%
mutate(life_level = case_when(
lifeExp < 48~ 'low',
lifeExp < 59 ~ 'moderate',
lifeExp < 70 ~ 'high',
TRUE ~ 'very high')) %>%
ggplot() +
geom_boxplot(aes(x = life_level, y = gdpPercap)) +
labs(y = "GDP per capita, $", x= "Life expectancy level, years") +
theme_bw()
gapminder %>%
filter(year==1997) %>%
mutate(life_level = factor(case_when(
lifeExp < 48~ 'low',
lifeExp < 59 ~ 'moderate',
lifeExp < 70 ~ 'high',
TRUE ~ 'very high'))) %>%
ggplot() +
geom_boxplot(aes(x = life_level, y = gdpPercap)) +
labs(y = "GDP per capita, $", x= "Life expectancy level, years") +
theme_bw()
gapminder %>%
filter(year == 1997) %>%
mutate(life_level = factor(case_when(lifeExp < 23 ~ 'very low',
lifeExp < 48~ 'low',
lifeExp < 59 ~ 'moderate',
lifeExp < 70 ~ 'high',
TRUE ~ 'very high'),
levels = c("very low" , "low","moderate", "high","very high"))) %>%
ggplot() + geom_boxplot(aes(x = life_level, y = gdpPercap)) +
labs(y = "GDP per capita, $", x= "Life expectancy level, years") +
theme_bw() +
scale_x_discrete(drop = FALSE)
class(gapminder$continent)
nlevels(gapminder$continent)
View(gapminder)
str(gapminder$continent=="Aisa")
str(gapminder$continent=="Asia")
gapminder %>%
filter(continent=="Asia")
gapminder %>%
filter(continent=="Asia") %>%
levels()
gapminder$continent %>%
filter(continent=="Asia") %>%
levels()
gapminder %>%
filter(continent=="Asia") %>%
levels()
gapminder %>%
filter(continent=="Asia") %>%
droplevels() %>%
levels()
gapminder %>%
filter(continent=="Asia") %>%
droplevels() %>%
nlevels()
gapminder %>%
filter(continent=="Asia") %>%
droplevels()
str(gapminder$continent) %>%
table()
str(gapminder$continent)
labels(gapminder$continent)
level(gapminder$continent)
levels(gapminder$continent)
levels(gapminder$continent) %>%
as.integer()
levels(gapminder$continent) %>%
as.integer()
str(gapminder$continent)
nlevels(gapminder$country)
h_countries <- c("Egypt", "Haiti", "Romania", "Thailand", "Venezuela")
h_gap <- gapminder %>%
filter(country %in% h_countries)
h_gap %>%
droplevels() %>%
nlevels()
h_gap %>%
droplevels() %>%
levels()
h_gap<- h_gap %>%
droplevels() %>%
levels()
h_gap<- h_gap %>%
droplevels() %>%
nlevels(h_gap)
h_gap<- h_gap %>%
droplevels() %>%
nlevels(h_gap$country)
h_gap<- h_gap %>%
droplevels()
h_gap <- gapminder %>%
filter(country %in% h_countries)
nlevels(h_gap$country)
h_gap <- h_gap %>%
droplevels()
nlevels(h_gap$country)
h_gap <- h_gap %>%
fct_drop()
gapminder %>%
fct_count(country)
str(gapminder$country)
gapminder %>%
fct_count(continent)
fct_count(gapminder$country)
gapminder %>%
ggplot() +
geom_bar(aes(y=continent)) +
coord_flip() +
theme_bw() +
ylab("Number of entries") + xlab("Continent")
gapminder %>%
ggplot() +
geom_bar(aes(continent)) +
coord_flip() +
theme_bw() +
ylab("Number of entries") + xlab("Continent")
gapminder %>%
ggplot() +
geom_bar(aes(x=continent)) +
coord_flip() +
theme_bw() +
ylab("Number of entries") + xlab("Continent")
gapminder %>%
ggplot() +
geom_bar(aes(x=continent, y=..prop..)) +
coord_flip() +
theme_bw() +
ylab("Number of entries") + xlab("Continent")
gapminder %>%
ggplot() +
geom_bar(aes(x=continent)) +
coord_flip() +
theme_bw() +
ylab("Number of entries") + xlab("Continent")
gapminder %>%
ggplot() +
geom_col(aes(x=continent)) +
coord_flip() +
theme_bw() +
ylab("Number of entries") + xlab("Continent")
gapminder %>%
ggplot() +
geom_col(aes(x=continent, y=..prop..)) +
coord_flip() +
theme_bw() +
ylab("Number of entries") + xlab("Continent")
gapminder %>%
ggplot() +
geom_col(aes(x=continent, y=count)) +
coord_flip() +
theme_bw() +
ylab("Number of entries") + xlab("Continent")
gapminder %>%
ggplot() +
geom_col(aes(x=continent, y=count(x))) +
coord_flip() +
theme_bw() +
ylab("Number of entries") + xlab("Continent")
gapminder %>%
ggplot() +
geom_col(aes(x=continent, y=count(continent))) +
coord_flip() +
theme_bw() +
ylab("Number of entries") + xlab("Continent")
gapminder %>%
ggplot() +
geom_bar(aes(x=continent)) +
coord_flip() +
theme_bw() +
ylab("Number of entries") + xlab("Continent")
gapminder %>%
ggplot() +
geom_bar(aes(fct_infreq(continent))) +
coord_flip()+
theme_bw() +
ylab("Number of entries") + xlab("Continent")
gapminder %>%
ggplot() +
geom_bar(aes(fct_rev(continent))) +
coord_flip()+
theme_bw() +
ylab("Number of entries") + xlab("Continent")
gapminder %>%
ggplot() +
geom_bar(aes(fct_infreq(continent))) +
coord_flip()+
theme_bw() +
ylab("Number of entries") + xlab("Continent")
##  default summarizing function is median()
gapminder %>%
ggplot() +
geom_bar(aes(fct_reorder(country, life_exp))) +
coord_flip()+
theme_bw() +
xlab("Continent") + ylab("Number of entries")
##  default summarizing function is median()
gapminder %>%
ggplot() +
geom_bar(aes(fct_reorder(country, life_Exp))) +
coord_flip()+
theme_bw() +
xlab("Continent") + ylab("Number of entries")
##  default summarizing function is median()
gapminder %>%
ggplot() +
geom_bar(aes(fct_reorder(country, lifeExp))) +
coord_flip()+
theme_bw() +
xlab("Continent") + ylab("Number of entries")
##  default summarizing function is median()
gapminder %>%
ggplot() +
geom_bar(aes(fct_reorder(continent, lifeExp))) +
coord_flip()+
theme_bw() +
xlab("Continent") + ylab("Number of entries")
##  default summarizing function is median()
gapminder %>%
ggplot() +
geom_bar(aes(fct_reorder(continent, lifeExp, max))) +
coord_flip()+
theme_bw() +
xlab("Continent") + ylab("Number of entries")
## order by life expectancy
ggplot(h_gap, aes(x = year, y = lifeExp,
color = fct_reorder2(country, year, lifeExp))) +
geom_line() +
labs(color = "country")
gapminder %>%
ggplot() +
geom_bar(aes(continent, "Africa")) +
coord_flip()+
theme_bw()
geom_bar(aes(fct_relevel(continent, "Africa")) +
gapminder %>%
ggplot() +
geom_bar(aes(fct_relevel(continent, "Africa"))) +
coord_flip()+
theme_bw()
gapminder %>%
ggplot() +
geom_bar(aes(fct_relevel(continent, "Africa"))) +
coord_flip()+
theme_bw() +
xlab( "Continent")
fct_recode(continent, 'OC'="Oceania"))) +
gapminder %>%
geom_bar(aes(
fct_recode(continent, 'OC'="Oceania")) +
coord_flip()+
theme_bw() +
xlab( "Continent")
gapminder %>%
fct_recode(continent, 'OC'="Oceania"))) +
gapminder %>%
ggplot() +
geom_bar(aes(
fct_recode(continent, 'OC'="Oceania"))) +
coord_flip()+
theme_bw() +
xlab( "Continent")
fct_recode(continent, 'OC'="Oceania"))) +
fct_recode(continent, 'OC'="Oceania"))) +
gapminder %>%
ggplot() +
geom_bar(aes(fct_recode(continent, 'OC'="Oceania"))) +
coord_flip() +
theme_bw() +
xlab( "Continent")
gapminder %>%
ggplot() +
geom_bar(aes(fct_recode(continent, 'OC'="Oceania", "AM"="Americas"))) +
coord_flip() +
theme_bw() +
xlab( "Continent")
df1 <- gapminder %>%
filter(country %in% c("United States", "Mexico"), year > 2000) %>%
droplevels()
df2 <- gapminder %>%
filter(country %in% c("France", "Germany"), year > 2000) %>%
droplevels()
c(df1$country, df2$country)
fct_c(df1$country, df2$country)
install.packages("plotly")
---
title: "Adequate visualization of data"
author: "MDP"
date: "11/6/2019"
output:html_document
