geom_bar(aes(fill = transmission), position = "dodge2")
(hair <- as_tibble(HairEyeColor) %>%
count(Hair, wt = n))
library(tidyverse)
library(gapminder)
library(ggridges)
library(scales)
(hair <- as_tibble(HairEyeColor) %>%
count(Hair, wt = n))
ggplot(hair, aes(Hair, n)) +
geom_bar()
ggplot(hair, aes(Hair)) +
geom_bar()
(hair <- as_tibble(HairEyeColor) %>%
count(Hair, wt = n))
ggplot(hair, aes(n)) +
geom_bar()
?geom_bar
ggplot(hair, aes(Hair)) +
geom_bar()
ggplot(hair, aes(Hair, ..prop..)) +
geom_bar()
ggplot(hair, aes(Hair)) +
geom_bar() +
stat_count()
ggplot(hair, aes(Hair)) +
geom_bar() +
stat_count(group=hair)
ggplot(hair, aes(Hair)) +
geom_bar() +
stat_count(group=Hair)
ggplot(hair, aes(Hair)) +
geom_col()
ggplot(hair, aes(Hair, n)) +
geom_col()
ggplot(hair, aes(Hair, n)) +
#geom_bar()
geom_col()
(hair_eye <- as_tibble(HairEyeColor) %>%
count(Hair, Eye, wt = n))
ggplot(hair_eye, aes(Hair, Eye)) +
geom_point(aes(colour = n))
ggplot(hair_eye, aes(Hair, Eye)) +
geom_point(aes(colour = Hair, fill=Eye), shape = 21)
ggplot(hair_eye, aes(Hair, Eye)) +
geom_point(aes(colour = Hair, fill=Eye), shape = 21, size=4)
?shape
ggplot(hair_eye, aes(Hair, Eye)) +
geom_point(aes(colour = Hair, fill=Eye), shape = 15, size=4)
ggplot(hair_eye, aes(Hair, Eye)) +
geom_point(aes(colour = Hair, fill=Eye), shape = 22, size=4)
gapminder %>%
ggplot(aes(year, lifeExp)) %>%
geom_point()
gapminder %>%
ggplot(aes(year, lifeExp)) +
geom_point(color=continet)
gapminder %>%
ggplot(aes(year, lifeExp)) +
geom_point(color=continent)
gapminder
gapminder %>%
ggplot(aes(year, lifeExp)) +
geom_point(aes(color=continent))
gapminder %>%
ggplot(aes(year, lifeExp, color=continent)) +
geom_smooth(aes(color=continent))
gapminder %>%
ggplot(aes(year, lifeExp, color=continent)) +
geom_point()
gapminder %>%
ggplot(aes(year, lifeExp, color=continent)) +
geom_point() +
geom_smooth(aes(color=continent))
gapminder %>%
ggplot(aes(year, lifeExp, color=continent)) +
geom_point() +
geom_smooth(aes(color=continent), se=FALSE)
gapminder %>%
ggplot(aes(year, lifeExp, color=continent)) +
geom_smooth(aes(color=continent), se=FALSE) +
geom_point()
gapminder %>%
ggplot(aes(year, lifeExp, color=continent)) +
geom_smooth(aes(color=continent), se=FALSE)
gapminder %>%
ggplot(aes(year, lifeExp, color=continent)) +
geom_point() +
geom_smooth(aes(color=continent), se=FALSE)
gapminder %>%
ggplot(aes(year, lifeExp, color=continent)) +
geom_smooth(aes(color=continent), se=FALSE) +
geom_point()
gapminder %>%
ggplot(aes(year, lifeExp, color=continent)) +
geom_smooth(aes(color=continent), se=FALSE) +
geom_point() +
facet_wrap(~continent)
gapminder %>%
ggplot(aes(year, lifeExp, color=continent)) +
geom_point() +
facet_wrap(~continent, scales = "free_y")  +
geom_smooth(aes(color=continent), se=FALSE)
gapminder %>%
ggplot(aes(year, lifeExp, color=continent)) +
geom_point() +
facet_wrap(~continent, scales = "free_y")  +
geom_smooth(aes(color=continent), se=FALSE) +
xlim (1980, NA)
require(tribble)
require(tsibble)
gapminder %>%
as_tsibble() %>%
ggplot(aes(year, pop, group=country)) +
geom_line()
?as_tsibble()
gapminder %>%
as_tsibble(index = year) %>%
ggplot(aes(year, pop, group=country)) +
geom_line()
gapminder
gapminder %>%
as_tsibble(index = year)
gapminder %>%
as_tsibble(key=c(country, continent, lifeExp), index = year)
gapminder %>%
as_tsibble(key=c(country, continent, lifeExp), index = year) %>%
ggplot(aes(year, pop, group=country)) +
geom_line()
gapminder %>%
as_tsibble(key=c(country, continent, lifeExp), index = year) %>%
ggplot(aes(year, pop, group=country)) +
geom_line(aes(color=country))
gapminder %>%
as_tsibble(key=c(country, continent, lifeExp), index = year) %>%
ggplot(aes(year, pop, group=country)) +
geom_line(aes(color=country))
gapminder %>%
as_tsibble(key=c(country, continent, lifeExp), index = year) %>%
ggplot(aes(year, pop, group=country)) +
geom_line(aes(color=gdpPercap))
gapminder %>%
as_tsibble(key=c(country, continent, lifeExp), index = year) %>%
ggplot(aes(year, pop, group=country)) +
geom_line(aes(color=gdpPercap), alpha=0.3)
gapminder %>%
as_tsibble(key=c(country, continent, lifeExp), index = year) %>%
ggplot(aes(year, pop, group=country)) +
geom_line(aes(color=gdpPercap), alpha=0.3) +
facet_wrap(~country)
gapminder %>%
as_tsibble(key=c(country, continent, lifeExp), index = year) %>%
ggplot(aes(year, pop, group=country)) +
geom_line(aes(color=gdpPercap), alpha=0.3)
help(tidyr)
browseVignettes("tidyr")
browseVignettes("tidyr")
browseVignettes("tidyr")
require(tidyverse)
relig_income
relig_income
str(relig_income)
?pivot_longer
relig_income %>%
pivot_longer(cols = -religion, names_to = "income", values_to = "count")
billboard
billboard %>%
pivot_longer(cols = starts_with("wk"),
names_to = "week",
values_to = "rank")
billboard %>%
pivot_longer(cols = starts_with("wk"),
names_to = "week",
names_prefix = "wk",
names_ptypes = list(week=integer()),
values_to = "rank")
billboard %>%
pivot_longer(cols = starts_with("wk"),
names_to = "week",
names_prefix = "wk",
names_ptypes = list(week=integer()),
values_to = "rank",
values_drop_na = TRUE)
billboard %>%
pivot_longer(cols = starts_with("wk"),
names_to = "week",
names_prefix = "wk",
names_ptypes = list(week=integer()),
values_to = "rank")
,
values_drop_na = TRUE
billboard %>%
pivot_longer(cols = starts_with("wk"),
names_to = "week",
names_prefix = "wk",
names_ptypes = list(week=integer()),
values_to = "rank",
values_drop_na = TRUE)
require(tidyverse)
billboard %>%
pivot_longer(
cols = starts_with("wk"),
names_to = "week",
names_prefix = "wk",
names_ptypes = list(week = integer()),
values_to = "rank",
values_drop_na = TRUE,
)
who
who
#? extract
```
? extract
#?tidyr::extract
```
?tidyr::extract
who %>%
pivot_longer(
cols = new_sp_m014:newrel_f65,
names_to = c("diagnosis", "gender", "age"),
names_pattern = "new_?(.)_(.)(.*)",
values_to = "count"
)
family <- tribble(
~family,  ~dob_child1,  ~dob_child2, ~gender_child1, ~gender_child2,
1L, "1998-11-26", "2000-01-29",             1L,             2L,
2L, "1996-06-22",           NA,             2L,             NA,
3L, "2002-07-11", "2004-04-05",             2L,             2L,
4L, "2004-10-10", "2009-08-27",             1L,             1L,
5L, "2000-12-05", "2005-02-28",             2L,             1L,
)
family <- family %>% mutate_at(vars(starts_with("dob")), parse_date)
family
family %>%
pivot_longer(
-family,
names_to = c(".value", "child"),
names_sep = "_",
values_drop_na = TRUE
)
anscombe
anscombe %>%
pivot_longer(everything(),
names_to = c(".value", "set"),
names_pattern = "(.)(.)"
) %>%
arrange(set)
fish_encounters
fish_encounters %>%
pivot_wider(
names_from = station,
values_from = seen)
warpbreaks <- warpbreaks %>%
as_tibble() %>%
select(wool, tension, breaks)
warpbreaks
warpbreaks <- warpbreaks %>%
as_tibble() %>%
select(wool, tension, breaks) %>%
print()
warpbreaks
warpbreaks %>%
pivot_wider(
names_from = wool,
values_from = breaks,
values_fn = list(breaks = mean)
)
haireye %>%
DT::datatable(rownames = FALSE)
datasets::HairEyeColor
haireye<- datasets::HairEyeColor
haireye %>%
DT::datatable(rownames = FALSE)
haireye
at
haireye<- datasets::HairEyeColor
haireye
haireye %>%
DT::datatable(rownames = FALSE)
library(tidyverse)
lotr  <- read_csv("https://raw.githubusercontent.com/jennybc/lotr-tidy/master/data/lotr_tidy.csv")
lotr  <- read_csv("https://raw.githubusercontent.com/jennybc/lotr-tidy/master/data/lotr_tidy.csv")
guest <- read_csv("https://raw.githubusercontent.com/STAT545-UBC/Classroom/master/data/wedding/attend.csv")
email <- read_csv("https://raw.githubusercontent.com/STAT545-UBC/Classroom/master/data/wedding/emails.csv")
knitr::opts_chunk$set(error = TRUE, warning = FALSE)
lotr
knitr::opts_chunk$set(error = TRUE, warning = FALSE)
fish_encounters
fish_encounters %>%
pivot_wider( id_cols = fish,
names_from = station,
values_from = seen)
(lotr_wide <- lotr %>%
pivot_wider(id_cols = c(-Race, -Words),
names_from =  Race,
values_from =  Words))
lotr_wide %>%
pivot_longer(cols = c(-Film, -Gender),
names_to  = 'Race',
values_to = 'Words')
anscombe
anscombe %>%
pivot_longer(everything(),
names_to = c(".value", "set"),
names_pattern = "(.)(.)"
) %>%
arrange(set)
guest %>%
DT::datatable(rownames = FALSE)
guest %>%
DT::datatable(rownames = FALSE)
guest_long %>%
separate(name, into = c("first_name","last
_name"))
(guest_long <- guest %>%
pivot_longer(cols      = c(-party, -name),
names_to  = c(".value", "event"),
names_sep = "_"))
guest_long %>%
separate(name, into = c("first_name","last
_name"))
tidyr::unite()
guest_long %>%
unite(col = "name",c("first_name","last_name"),sep = "")
guest_long %>%
separate(name, into = c("first_name","last
_name"))
guest_long %>%
unite(col = "name",c("first_name","last_name"),sep = "")
guest_long %>%
separate(name, into = c("first_name","last
_name"))
guest_long <-  guest_long %>%
unite(
col = "name",c("first_name","last_name"),     sep = "")
guest_long<- guest_long %>%
separate(
name, into = c("first_name","last_name"))
guest_long <-  guest_long %>%
unite(
col = "name",c("first_name","last_name"),     sep = "")
guest_long <-  guest_long %>%
unite(
col = "name",c("first_name","last_name"),     sep = "") %>%
print()
guest_long<- guest_long %>%
separate(
name, into = c("first_name","last_name"))
guest_long <-  guest_long %>%
unite(
col = "name",c("first_name","last_name"),     sep = "") %>%
print()
(guest_long <- guest %>%
pivot_longer(cols      = c(-party, -name),
names_to  = c(".value", "event"),
names_sep = "_"))
guest_long<- guest_long %>%
separate(
name, into = c("first_name","last_name"))
(guest_long <- guest %>%
pivot_longer(cols      = c(-party, -name),
names_to  = c(".value", "event"),
names_sep = "_"))
guest_long<- guest_long %>%
separate(
name, into = c("first_name","last_name")) %>%
print()
(guest_long <- guest %>%
pivot_longer(cols      = c(-party, -name),
names_to  = c(".value", "event"),
names_sep = "_"))
guest_long %>%
separate(
name, into = c("first_name","last_name"), extra = "merge", fill = "left") %>%
guest_long %>%
separate(
name, into = c("first_name","last_name"), extra = "merge", fill = "left")
guest_long %>%
separate(
name, into = c("first_name","last_name"), extra = "merge", fill = "right")
guest_long<-
guest_long %>%
separate(    name, into = c("first_name","last_name"), sep=" ") %>%
print()
guest_long <-  guest_long %>%
unite(col = "name",c("first_name","last_name"), sep = " ") %>%
print()
guest_long %>%
group_by(party) %>%
summarize(all_pending = all(attendance == "PENDING"))
guest_long %>%
arrange(party)
guest_long %>%
group_by(party) %>%
summarize(all_pending = all(attendance == "PENDING"))
# guest contains a variable for attendance to wedding
guest %>%
group_by(party) %>%
summarize(pending_wedding = all(FILL_THIS_IN == "PENDING"))
# guest contains a variable for attendance to wedding
guest %>%
group_by(party) %>%
summarize(pending_wedding = all(FILL_THIS_IN == "PENDING"))
guest
# guest contains a variable for attendance to wedding
guest %>%
group_by(party) %>%
summarize(pending_wedding = all(attendance_wedding == "PENDING"))
guest_long
guest_long %>%
filter(event=="wedding")
# guest contains a variable for attendance to wedding
guest %>%
group_by(party) %>%
summarize(pending_wedding = all(attendance_wedding == "PENDING"))
guest_long %>%
filter(event=="wedding") %>%
guest_long %>%
filter(event=="wedding") %>%
group_by(party) %>%
summarize(pending_wedding = all(attendance == "PENDING"))
# guest contains a variable for attendance to wedding
guest %>%
group_by(party) %>%
summarize(pending_wedding = all(attendance_wedding == "PENDING"))
guest_long %>%
filter(event=="wedding") %>%
group_by(party) %>%
summarize(pending_wedding = all(attendance == "PENDING"))
guest_long
guest_long %>%
pivot_wider(id_cols     = c("party","name"),
names_from  = ("event"),
names_sep   = "_",
values_from = c("meal", "attendance"))
email
email %>%
separate_rows(guest, sep =",")
email <- read_csv("https://raw.githubusercontent.com/STAT545-UBC/Classroom/master/data/wedding/emails.csv")
email
email %>%
separate_rows(guest, sep =",")
email
tibble(x = 1:6,
y = 1:2)
tribble(
~Day, ~Breakfast,
1, "Apple",
2, "Yogurt",
3, "Yogurt"
)
tibble(x = 1:6,
y = 1:2)
(list_col <- tibble(n = 1:2,
y = list(iris, mtcars)))
expand_grid(x = 1:2, y = 1:2, z = 1:2)
expand_grid(x = 1:2, y = 1:2, z = 1:2)
vignette("nest")
(iris_nest <- iris %>%
group_by(Species) %>%
nest())
(df <- tibble(
year   = c(2010, 2010, 2010, 2010, 2012, 2012, 2012),
qtr    = c(   1,    2,    3,    4,    1,    2,    3),
return = rnorm(7)
))
df %>%
complete(year, qtr) #makes explicit NA's
rnorm(100)
tibble(label = "Sample A",
x = rnorm(100),
y = x + sd(x))
1/sqrt(100)
tibble(mu = mu, sd = sd) %>%
group_by_all() %>%
mutate(z = list(rnorm(n, mu, sd)))
n <- 100
mu <- c(-5, 0, 5)
sd <- c(1, 3, 10)
tibble(mu = mu, sd = sd) %>%
group_by_all() %>%
mutate(z = list(rnorm(n, mu, sd)))
tibble(mu = mu, sd = sd) %>%
group_by_all() %>%
mutate(z = list(rnorm(n, mu, sd))) %>%
unnest()
# a tibble with columns that includes dataframes
tibble(mu = mu, sd = sd) %>%
group_by_all() %>%
mutate(z = list(rnorm(n, mu, sd)))
experiment <- tibble(
name = rep(c("Alex", "Robert", "Sam"), c(3, 2, 1)),
trt  = rep(c("a", "b", "a"), c(3, 2, 1)),
rep = c(1, 2, 3, 1, 2, 1),
measurement_1 = runif(6),
measurement_2 = runif(6)
)
experiment
experiment %>% expand(name, trt, rep)
experiment
experiment %>% complete(name, trt, rep)
experiment
experiment %>% expand(name, trt, rep)
experiment %>% complete(name, trt, rep)
install.packages("devtools")
devtools::install_github("JoeyBernhardt/singer")
install.packages("devtools")
devtools::install_github("JoeyBernhardt/singer")
install.packages("devtools")
install.packages("devtools")
devtools::install_github("JoeyBernhardt/singer")
devtools::install_github("JoeyBernhardt/singer")
